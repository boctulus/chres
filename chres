#!/bin/bash

version=0.11
frec=60

load () { source $(dirname $(realpath $0))/$1; }

load chres.conf
load libs


cut_display () {
	local display=$1
	local i
	local _display

	declare -a lines
	explode "$(xrandr)" ENTER lines

	for ((i=0;i<"${#lines[@]}";i++)); do
		_display=$(grep 'connected' <<< "${lines[$i]}" | egrep -o -i ^[a-z][a-z0-9\-]*)
		if [[ $_display == $display ]]; then
			((i++))
			while [ $i -lt "${#lines[@]}" ] && [ -z $(grep 'connected' <<< "${lines[$i]}" | egrep -o -i ^[a-z][a-z0-9\-]*) ]; do
				echo -e "${lines[$i]}"
				((i++))
			done
		fi
	done
}

get_resols () {
	declare -A local _arr
	_arr=()

	local minw=$(echo $minres | cut -d'x' -f1)
	local minh=$(echo $minres | cut -d'x' -f2)

	local resols=$(echo "$(cut_display $display)" | egrep -o '[0-9]{3,}+x[0-9]{3,}')

	local ix=0
	local res
	for res in ${resols[@]}; do
		local _ratio=$(echo "scale=1; $res" | awk '{print $1,"/",$2}' FS="x" | bc -l)
		local _w=$(echo $res | cut -d'x' -f1)
		local _h=$(echo $res | cut -d'x' -f2)

		if [[ ! -z $ratio ]]; then
			if [[ $(echo $ratio | bc -l) == $(echo $_ratio | bc -l) ]]; then
				if [[ ! -z $minres ]]; then
					[[ $_w -ge $minw ]] && [[ $_h -ge minh ]] && _arr[$res]+=1
				else
					_arr[$res]+=1
				fi			
			fi
		else
			if [[ ! -z $minres ]]; then
				[[ $_w -ge $minw ]] && [[ $_h -ge minh ]] && _arr[$res]+=1
			else
				_arr[$res]+=1
			fi		
		fi			
		
		((ix++))
	done

	for res in ${!_arr[@]}; do
		selected_resols=(${selected_resols[@]} $res)	
	done

	IFS=$'\n' selected_resols=($(sort -r <<<"${selected_resols[*]}"))
	unset IFS
}


reset () {
	DISPLAY=$screen xrandr --output $display --auto
}

set_resol () {
	local wxh=$1

	[[ -z $1 ]] || [[ -z $display ]] && { echo "Missing argument for set_resol"; exit 1; }

	[[ $wxh == "default" ]] && { reset; return; }

	local wh=$(echo $wxh | awk '{print $1,$2}' FS="x")
	local params=$(cvt $wh $frec | grep ^Modeline | cut -d' ' -f3-)
	set -- $params

	xrandr --newmode "${wxh}_$frec.00" $@ 2>/dev/null
	xrandr --addmode $display ${wxh}_$frec.00 2>/dev/null
	xrandr --output $display --mode ${wxh}_$frec.00 2>/dev/null
}

# Get connected display interfaces
get_interfaces () {
	xrandr | grep ' connected' | egrep -o -i ^[a-z][a-z0-9\-]*
}

get_display () {
	set -- $(get_interfaces)

	case $# in 
		0)
			echo There is no 'display' connected
			exit
			;;
		1)	
			display=$1
			;;
		*)
			echo -e "Select display \n"

			select display in $@
			do
				break	
			done	
	esac 
}

get_alias () {
	shopt -s nocasematch
	case $1 in
		SD|240p)
			echo 352x240
			;;
		360p)
			echo 480x360
			;;
		480p)
			echo 858x480
			;;
		HD|HALF-HD|720p)
			echo 1280x720
			;;
		FULL-HD|1080p)
			echo 1920x1080
			;;
		ULTRA-HD|4K|2160p)
			echo 3860x2160
			;;	
		*)
			return 1				
	esac
	return 0
}

options () 
{
	local help=$(cat <<-TEXT

	Usage:

	    $(basename $0) <options>

	Change easly display resolution

	Options:

	 -d, --display                   specify display interface ($(get_interfaces),...)
	 -r, --resolution                set display resolution
	 -R. --reset                     set default resolution

	 -h, --help                      display this help
	 -v, --version                   display version

TEXT
)

	declare -A op_aliases
	local alias

	op_aliases=([display]='-d,--display' [resolution]='-r,--resolution' [reset]='-R,--reset') 

	case $1 in 
		-h|--help)	 
		echo -e "$help"
		exit 0
		;;

		-v|--version)	 
		echo "$(basename $0) version $version"
		exit 0
		;;
	esac

	while [ $# -gt 0 ]; do
		for alias in ${!op_aliases[@]}; do
			explode ${op_aliases[$alias]} ',' op

			in_array $1 op
			if [[ $? -eq 0 ]]; then
				[[ ! -z $2 ]] && val=$2 || val=on
				eval "$alias=$val"
			fi	
		done

		[[ -z $val ]] && shift 2 || shift
	done
}


options $@


[[ ! -z $DISPLAY ]] && screen=$DISPLAY || screen=':0'

# Get / select display
[[ -z $display ]] && get_display

if [[ ! -z $resolution ]]; then
	echo echo "Changing to $resolution $display $screen"
	set_resol "$resolution"
	exit 0
fi

if [[ ! -z $reset ]]; then
	echo "Reseting $display $screen"
	reset
	exit 0
fi

# Try with aliases
if [[ -z $(egrep '[1-3]\.[0-9]+' <<< $ratio) ]]; then
	if [[ ! -z $(egrep '[0-9]{1,4}:[0-9]{1,4}' <<<$ratio) ]]; then
		IFS=':'	
		set -- $ratio
		unset IFS
		ratio=$(echo "scale=1; $1/$2" | bc -l)
	else
		res=$(get_alias $ratio);

		if [[ ! -z $res ]]; then
			ratio=$(echo "scale=1; $res" | awk '{print $1,"/",$2}' FS="x" | bc -l)
		fi	
	fi	
fi 

if [[ -z $(egrep '[0-9]{3,}x[0-9]{3,}' <<< $minres) ]]; then 
	minres=$(get_alias $minres)
fi	


# Select automaticaly some resolutions 
get_resols

echo -e "Select resolution \n"

select res in ${selected_resols[@]} default quit
do
	[[ $res == "quit" ]] && break

	[[ -z $res ]] && echo "Invalid option"

	echo "Changing to $res $display $screen"
	sleep 1
	set_resol "$res"
done
